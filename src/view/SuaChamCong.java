/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.LoaiSanPhamController;
import dao.ChamCongDAO;
import dao.ChiTietSanPhamDAO;
import dao.LaptopDAO;
import dao.LoaiSanPhamDAO;
import dao.MayTinhDAO;
import dao.PCDAO;
import dto.ChamCongDTO;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import model.ChamCong;
import model.Laptop;
import model.LoaiSanPham;
import model.MayTinh;
import model.PC;

/**
 *
 * @author Tran Nhat Sinh
 */
public class SuaChamCong extends javax.swing.JDialog {

    /**
     * Creates new form ThemSP
     */
    private ChamCongForm owner;
    
    private JPanel listPanel;
    
    private ChamCongDTO cc;

    public SuaChamCong(javax.swing.JInternalFrame parent, javax.swing.JFrame owner, boolean modal) {
        super(owner, modal);
        this.owner = (ChamCongForm) parent;
        this.cc = this.owner.getChamCongSelect();
        initComponents();
        setLocationRelativeTo(null);
        initData();
    }
    
    void initData() {
        String[] startTime = cc.getGioVao().split(":");
        String[] endTime = cc.getGioRa().split(":");
        if (startTime.length != 3 || endTime.length != 3) {
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi tải dữ liệu chấm công, vui lòng thử lại");
            this.dispose();
            return;
        }
        startHourTxt.setText(startTime[0]);
        startMinTxt.setText(startTime[1]);
        startSecTxt.setText(startTime[2]);
        endHourTxt.setText(endTime[0]);
        endMinTxt.setText(endTime[1]);
        endSecTxt.setText(endTime[2]);
    }

    private SuaChamCong(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        endTimePanel = new javax.swing.JPanel();
        endMinTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        endHourTxt = new javax.swing.JTextField();
        endSecTxt = new javax.swing.JTextField();
        startTimePanel = new javax.swing.JPanel();
        startMinTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        startHourTxt = new javax.swing.JTextField();
        startSecTxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        addNew = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thêm loại sản phẩm mới");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SỬA THÔNG TIN CHẤM CÔNG");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 60));

        endMinTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endMinTxtActionPerformed(evt);
            }
        });

        jLabel2.setText("Giờ ra:");

        endHourTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endHourTxtActionPerformed(evt);
            }
        });

        endSecTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endSecTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout endTimePanelLayout = new javax.swing.GroupLayout(endTimePanel);
        endTimePanel.setLayout(endTimePanelLayout);
        endTimePanelLayout.setHorizontalGroup(
            endTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endTimePanelLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endHourTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(endMinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(endSecTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        endTimePanelLayout.setVerticalGroup(
            endTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endTimePanelLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(endTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endHourTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endMinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(endSecTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        getContentPane().add(endTimePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 450, 100));

        startMinTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startMinTxtActionPerformed(evt);
            }
        });

        jLabel3.setText("Giờ vào:");

        startHourTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startHourTxtActionPerformed(evt);
            }
        });

        startSecTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSecTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startTimePanelLayout = new javax.swing.GroupLayout(startTimePanel);
        startTimePanel.setLayout(startTimePanelLayout);
        startTimePanelLayout.setHorizontalGroup(
            startTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startTimePanelLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startHourTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(startMinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(startSecTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        startTimePanelLayout.setVerticalGroup(
            startTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startTimePanelLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(startTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startHourTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startMinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(startSecTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        getContentPane().add(startTimePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 450, 100));

        addNew.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        addNew.setForeground(new java.awt.Color(255, 255, 255));
        addNew.setText("Cập nhật");
        addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(255, 0, 0));
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setText("Hủy bỏ");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 25, Short.MAX_VALUE)
                    .addComponent(addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(90, 90, 90)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 25, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 12, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 13, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 420, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewActionPerformed
        // TODO add your handling code here:
        try {
            String startTime = startHourTxt.getText() + ":" + startMinTxt.getText() + ":" + startSecTxt.getText();
            String endTime = endHourTxt.getText() + ":" + endMinTxt.getText() + ":" + endSecTxt.getText();
            if (!isValidTime(startTime) || !isValidTime(endTime)) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng ngày giờ!");
                return;
            }
            ChamCong newCC = new ChamCong();
            newCC.setMaChamCong(this.cc.getMaChamCong());
            newCC.setGioVao(startTime);
            newCC.setGioRa(endTime);
            int updateResult = ChamCongDAO.getInstance().update(newCC);
            if (updateResult == 1) {
                JOptionPane.showMessageDialog(this, "Cập nhật thông tin chấm công thành công");
                this.owner.loadDataToTable();
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi, vui lòng thử lại!");
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_addNewActionPerformed

    boolean isValidTime(String timeString) {
        // Định dạng giờ "HH:mm:ss"
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        sdf.setLenient(false); // Không cho phép định dạng giờ linh hoạt

        try {
            // Thử chuyển đổi chuỗi thành Date
            Date date = sdf.parse(timeString);
            return true; // Nếu thành công, chuỗi hợp lệ
        } catch (ParseException e) {
            return false; // Nếu xảy ra lỗi, chuỗi không hợp lệ
        }
    }
    
    private void endMinTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endMinTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endMinTxtActionPerformed

    private void endHourTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endHourTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endHourTxtActionPerformed

    private void endSecTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endSecTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endSecTxtActionPerformed

    private void startMinTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startMinTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startMinTxtActionPerformed

    private void startHourTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startHourTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startHourTxtActionPerformed

    private void startSecTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSecTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startSecTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public String createIdPC() {
        ArrayList<MayTinh> mtAll = MayTinhDAO.getInstance().selectAll();
        ArrayList<MayTinh> pcAll = new ArrayList<MayTinh>();
        for (MayTinh mayTinh : mtAll) {
            if (mayTinh.getMaMay().contains("PC")) {
                pcAll.add(mayTinh);
            }
        }
        int i = pcAll.size();
        String check ="check";
        while(check.length()!=0){
            i++;
            for (MayTinh mayTinh : pcAll) {
                if(mayTinh.getMaMay().equals("PC"+i)){
                    check="";
                }
            }
            if(check.length()==0){
                check ="check";
            } else {
                check = "";
            }
        }
        return "PC" + i;
    }

    public String createIdLT() {
        ArrayList<MayTinh> mtAll = MayTinhDAO.getInstance().selectAll();
        ArrayList<MayTinh> lpAll = new ArrayList<MayTinh>();
        for (MayTinh mayTinh : mtAll) {
            if (mayTinh.getMaMay().contains("LP")) {
                lpAll.add(mayTinh);
            }
        }
        int i = lpAll.size();
        String check ="check";
        while(check.length()!=0){
            i++;
            for (MayTinh mayTinh : lpAll) {
                if(mayTinh.getMaMay().equals("LP"+i)){
                    check="";
                }
            }
            if(check.length()==0){
                check ="check";
            } else {
                check = "";
            }
        }
        return "LP" + i;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuaChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuaChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuaChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuaChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SuaChamCong dialog = new SuaChamCong(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNew;
    private javax.swing.JButton cancel;
    private javax.swing.JTextField endHourTxt;
    private javax.swing.JTextField endMinTxt;
    private javax.swing.JTextField endSecTxt;
    private javax.swing.JPanel endTimePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField startHourTxt;
    private javax.swing.JTextField startMinTxt;
    private javax.swing.JTextField startSecTxt;
    private javax.swing.JPanel startTimePanel;
    // End of variables declaration//GEN-END:variables
}
